# Copyright 2023-2023 the openage authors. See copying.md for legal info.

"""
Test whether the openage nyan API modpack is present.
"""
from __future__ import annotations
from tkinter import CURRENT
import typing

import toml

from ....log import info, dbg

if typing.TYPE_CHECKING:
    from openage.util.fslike.directory import Directory


CURRENT_API_VERSION = "0.4.0"


def api_export_required(asset_dir: Directory) -> bool:
    """
    Returns true if the openage nyan API modpack cannot be found.

    TODO: Remove once the API modpack is generated by default.
    """
    modpack_dir = asset_dir / "converted" / "engine"

    if not modpack_dir.exists():
        info("openage nyan API modpack not found")
        return True

    dbg("Checking version of openage nyan API modpack")
    try:
        modpack_def = modpack_dir / "modpack.toml"
        with modpack_def.open() as fileobj:
            version: str = toml.loads(fileobj.read()).pop("info").pop("version")

        if version != CURRENT_API_VERSION:
            info("openage nyan API modpack is outdated")
            dbg("version is %s, expected %s", version, CURRENT_API_VERSION)
            return True

        info("openage nyan API modpack is up to date")
        return False

    except FileNotFoundError:
        info("openage nyan API modpack not found")
        dbg("could not find modpack.toml")
        return True

    except TypeError:
        info("openage nyan API modpack not found")
        dbg("could not parse modpack.toml; content is not a string")
        return True

    except toml.TomlDecodeError:
        info("openage nyan API modpack not found")
        dbg("could not parse modpack.toml; content is not TOML or malformed")
        return True

    return True
